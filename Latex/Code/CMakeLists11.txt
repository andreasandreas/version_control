cmake_minimum_required(VERSION 2.8)
# if you want a different compiler than the auto-detected one
# set(CMAKE_CXX_COMPILER "g++-7")

project("My Random Project")
message("\n Creating Makefile for NumInt")
message(" From CMakeLists in " ${CMAKE_SOURCE_DIR})
message(" --------------------------------------")

#TELL CMAKE RESP. MAKE WHERE TO OUTPUT THE OBJECTS
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Bin)

#BUILT TYPES:
#Types are: None Debug Release RelWithDebInfo MinSizeRel
set(${CMAKE_BUILD_TYPE} Debug)

set(CXX_STANDARD_REQUIRED on)
set(CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -Wpedantic")
#with -Wno warnings are ignored e.g -Wno-unused-parameter  ignores -Wunused-parameter

include_directories("${CMAKE_SOURCE_DIR}" ./Header)

# this tells cmake to look for an other CMakeLists.txt file in the directory Lib
add_subdirectory(Src)

#create a static library
add_library(myStaticLib STATIC ./Src/doSthg1.cpp)

#create a dynamic library
add_library(myDynamicLib SHARED ./Src/doSthg2.cpp)

#create the exectuable
add_executable(NumInt ./Src/MNumInt.cpp ./Src/doSthg3.cpp ./Src/doSthg4.cpp)

#linklibraries to executable
target_link_libraries(NumInt myStaticLib myDynamicLib)
